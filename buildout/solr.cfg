## solr config
[solr-files]
recipe = hexagonit.recipe.download
# url = http://mirrorservice.nomedia.no/apache.org//lucene/solr/3.5.0/apache-solr-3.5.0.zip
url = http://archive.apache.org/dist/lucene/solr/3.5.0/apache-solr-3.5.0.tgz
strip-top-level-dir = true

[solr]
recipe = collective.recipe.solrinstance
solr-location = ${buildout:parts-directory}/solr-files
schema-destination = ${buildout:parts-directory}/solr/solr/conf/
host = localhost
port = 8983

unique-key = django_id
default-search-field = text

index =
   name:django_id type:string indexed:true stored:true required:true
   name:text type:string indexed:true stored:true required:false omitnorms:false multivalued:true
   name:title type:string indexed:true stored:true required:false omitnorms:false multivalued:true
   name:url type:string indexed:true stored:true required:false omitnorms:false multivalued:true


[solr-conf]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
#   cp -v ${buildout:directory}/solr-conf/jetty.xml ${solr:jetty-destination}
   cp -v ${buildout:directory}/solr-conf/schema.xml ${solr:schema-destination}
   cp -v ${buildout:directory}/solr-conf/stopwords.txt ${solr:schema-destination}

[solr-rebuild]
recipe = iw.recipe.cmd
on_install = true
on_update = true

# since solr is not started by solr-instance but supervisord, solr-instance has
# no pid file and thinks that solr is down. Thus we must run it with
# solr-instance to be able to "solr-instance purge"
cmds =
   # ${buildout:bin-directory}/supervisorctl stop solr
   cp -v ${buildout:directory}/solr-conf/schema.xml ${solr:schema-destination}
   # ${buildout:bin-directory}/solr-instance start
   # COUNT=15; echo "Waiting $COUNT s"; sleep $COUNT
   ${buildout:bin-directory}/solr-instance purge
   time ${buildout:bin-directory}/${django:control-script} rebuild_index --batch-size 100 --noinput
   # ${buildout:bin-directory}/solr-instance stop
   # ${buildout:bin-directory}/supervisorctl start solr
